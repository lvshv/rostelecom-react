{"version":3,"sources":["components/Posts.js","components/Pagination.js","logo.svg","components/LastTask.js","App.js","index.js"],"names":["Posts","posts","loading","className","role","map","post","id","title","toUpperCase","body","Pagination","postsPerPage","totalPosts","paginate","currentPage","pageNumbers","i","Math","ceil","push","number","onClick","href","LastTask","jsonData","useRef","useEffect","current","innerHTML","data","obj","text","ref","App","useState","setPosts","filterPost","setFilterPost","setLoading","setCurrentPage","setPostsPerPage","showLastTask","setShowLastTask","a","axios","get","res","fetchPosts","filteredPosts","JSON","parse","stringify","filter","toLowerCase","includes","indexOfLastPost","indexOfFirstPost","currentPosts","slice","type","placeholder","onChange","e","target","value","copyPosts","sort","b","parseInt","length","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b09631b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Posts = ({ posts, loading }) => {\n  if (loading) {\n    return (\n      <div className='spinner-border text-warning' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </div>\n    )\n  }\n\n  return (\n    <ul className='list-group mb-4 col-8 mx-auto'>\n      {posts.map(post => {\n        return (\n          <li key={post.title} className='list-group-item'>\n            <div className=''>\n              <div className='row'></div>\n              <span className='badge rounded-pill bg-info text-dark'>\n                пост №{post.id}\n              </span>\n              <h5 className='my-3'>{post.title.toUpperCase()}</h5>\n              <p className=''>{post.body}</p>\n            </div>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default Posts\n","import React, { useState } from 'react'\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate, currentPage }) => {\n  const pageNumbers = []\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i)\n  }\n\n  return (\n    <nav>\n      <ul className='pagination justify-content-center'>\n        {pageNumbers.map(number => {\n          return (\n            <li\n              key={number}\n              className={\n                currentPage === number ? 'page-item active' : 'page-item'\n              }\n            >\n              <a\n                onClick={() => paginate(number)}\n                href='!#'\n                className='page-link'\n              >\n                {number}\n              </a>\n            </li>\n          )\n        })}\n      </ul>\n    </nav>\n  )\n}\n\nexport default Pagination\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useRef, useEffect } from 'react'\nimport data from './Json.json'\n\nexport const LastTask = () => {\n  let jsonData = useRef(null)\n  useEffect(() => {\n    jsonData.current.innerHTML = data.map(obj => obj.text)\n  }, [])\n\n  return <div className='text-start mb-5' ref={jsonData}></div>\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Posts from './components/Posts'\nimport Pagination from './components/Pagination'\nimport logo from './logo.svg'\nimport './App.css'\nimport { LastTask } from './components/LastTask'\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n  const [filterPost, setFilterPost] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [postsPerPage, setPostsPerPage] = useState(5)\n  const [showLastTask, setShowLastTask] = useState(false)\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true)\n      const res = await axios.get('https://jsonplaceholder.typicode.com/posts')\n      setPosts(res.data)\n      setLoading(false)\n    }\n\n    fetchPosts()\n  }, [])\n\n  const filteredPosts = () => {\n    const copyPosts = JSON.parse(JSON.stringify(posts))\n    return copyPosts.filter(post => {\n      return post.title.toLowerCase().includes(filterPost.toLowerCase())\n    })\n  }\n\n  const indexOfLastPost = currentPage * postsPerPage\n  const indexOfFirstPost = indexOfLastPost - postsPerPage\n  const currentPosts = filteredPosts().slice(indexOfFirstPost, indexOfLastPost)\n  const paginate = pageNumber => setCurrentPage(pageNumber)\n\n  const searchPost = e => setFilterPost(e.target.value)\n\n  const sortHandler = e => {\n    const copyPosts = JSON.parse(JSON.stringify(posts))\n    if (e.target.value === 'inc') {\n      setPosts(copyPosts.sort((a, b) => (a.id > b.id ? 1 : -1)))\n    }\n    if (e.target.value === 'dec') {\n      setPosts(copyPosts.sort((a, b) => (a.id < b.id ? 1 : -1)))\n    }\n  }\n\n  const setPageCount = e => {\n    setPostsPerPage(parseInt(e.target.value))\n  }\n  return (\n    <div className='container mt-5'>\n      <div className='mx-auto text-center'>\n        <h1 className='text-success mb-3'>Тестовое задание</h1>\n        <button\n          className='btn btn-danger mb-3'\n          onClick={() => setShowLastTask(!showLastTask)}\n        >\n          задание №5\n        </button>\n        {showLastTask && <LastTask />}\n        <div className='row mb-3 justify-content-center'>\n          <div className='col-3'>\n            <div className='input-group mb-3'>\n              <input\n                type='text'\n                className='form-control'\n                placeholder='Поиск по названию'\n                onChange={searchPost}\n              />\n            </div>\n          </div>\n\n          <div className='col-2'>\n            <div className='input-group mb-3 mr-2'>\n              <select className='form-select' onChange={sortHandler}>\n                <option value='inc'>По возрастанию</option>\n                <option value='dec'>По убыванию</option>\n              </select>\n            </div>\n          </div>\n\n          <div className='col-1'>\n            <div className='input-group mb-3 mr-2'>\n              <select className='form-select' onChange={setPageCount}>\n                <option value='5'>5</option>\n                <option value='15'>15</option>\n                <option value='25'>25</option>\n                <option value='50'>50</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <Posts posts={currentPosts} loading={loading} />\n        <Pagination\n          postsPerPage={postsPerPage}\n          totalPosts={filteredPosts().length}\n          paginate={paginate}\n          currentPage={currentPage}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}